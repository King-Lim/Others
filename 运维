@2021.8.12 00:30:00
  【问题现象：市局某局域网接入层下所有设备通信均正常；网络割接后发现一网段下所有设备均已恢复交互，其中一台无法ping通】
   【解决思路：
   1.tracert该IP与正常IP，对比跳跃路由的区别，发现为最后一跳无法响应，证明网络割接未对访问路由造成影响
   2.测试接入层下面所有设备之间访问，均无异常
   3.通过其他临近设备远程登录不通的服务器，向外访问的时候，发现除了同局域网下设备，均无法ping通机房以外的设备
   4.尝试交换正常设备与不通设备的网线，问题现象并未发生改变，由此确定故障点可能在不通的设备上，与网络无关
   5.查看/对比不通的设备网卡配置，发现子网掩码配置信息有误（PREFIX=24写为PRREFIX=24）
   6.修改配置信息，重启设备后恢复正常
   】
   疑点：为何在子网掩码配置信息错误的情况下，网络割接之前设备仍然正常通信?
   知识点：掩码的性质
    *配置错误可能会导致找不到目标主机，向外无法访问网关，也无法向外路由数据
    *关于arp的详解：https://zhuanlan.zhihu.com/p/115793042
   
@2021.9.27
    【问题现象：张江华为2288H V5服务器，多台双盘失效（raid5），致使Centos系统登录时一直显示引导错误（从网络引导，而非硬盘引导），BIOS中模式设置均正常】
    解决办法：
        *F11进系统BIOS，查询device中哪两块盘损坏；
        *通过ibmc管理口登录界面，收集系统日志，确认硬盘损坏顺序；
        *将新盘与后损坏的盘置换，待其rebuild完成；
        *更换剩余坏盘；
        【现场情况为硬盘无物理损坏，不清楚硬盘offline的原因，可尝试重新拉取至online状态，则服务器系统可正常运行，此时便可备份数据】

@2021.11.14
    Ansible开源自动化运维工具
        特点：
            *基于Python开发，二次开发相对容易；
            *管理模式简单，一条命令可以影响上千台主机；
            *无客户端模式，底层通过SSH通信；
        Ansible工具集：
            Ansible工具集包含Inventory、Modules、Plugins和API；
            *Ansible Playbooks：任务脚本，编排定义Ansible任务及的任务文件，由Ansible按序依次执行，通常是JSON格式的YML文件；
            *Inventory：Ansible管理主机清单；
            *Modules：Ansible执行命令功能模块，多数为内置的核心模块，也可自定义；
            *Plugins：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用；
            *API：供第三方程序调用的应用程序编程接口；
            *Ansible：该部分图中表现不太明显，组合Inventory、API、Modules、Plugins可以理解为是ansible命令工具，为核心执行工具；
        Ansible配置：
            *ansible安装
            以RPM安装为例，其依赖软件只有Python和SSH，且系统默认均已安装。Ansible的管理端只能是Linux；
            1）通过yum安装Ansible
                vim /etc/yum.repos.d/local.repo         #修改yum路径
                yum -y install ansible                  #安装ansible自动化运维工具
            2）验证安装结果
                ansible --version                       #如果命令可以正常运行，表示Ansible工具安装成功
            3）创建SSH免交互登录
                SSH包含两种认证方式：密码认证与密钥对认证；前者必须和系统交互，后者是免交互登录；
                    如果希望通过ansible自动管理设备，应该配置为免交互登录被管理设备；
                [root@centos01 ~]# ssh-keygen -t rsa  
                <!--生成密钥对-->
                Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa):
                <!--密钥对存放路径-->
                Created directory '/root/.ssh'.Enter passphrase (empty for no passphrase):       
                <!--输入私钥保护密码，直接按Enter键表示无密码-->
                Enter same passphrase again:    
                <!--再次输入-->
                Your identification has been saved in /root/.ssh/id_rsa.
                Your public key has been saved in /root/.ssh/id_rsa.pub.
                The key fingerprint is:
                SHA256:cJz6NRTrvMDxX+Jpce6LRnWI3vVEl/zvARL7D10q9WY root@centos01
                The key's randomart image is:
                +---[RSA 2048]----+
                |          .   . .|
                |       . . +   oo|
                |      . = o o. oo|
                |       = * o..+ *|
                |      . S *.=+=*+|
                |       . o =+XooE|
                |        . ..=.++.|
                |           ..o ..|
                |           .. o. |
                +----[SHA256]-----+
                [root@centos01 ~]# ssh-copy-id -i .ssh/id_rsa.pub  root@192.168.100.20  
                <!--复制公钥到远端192.168.100.20-->
                [root@centos01 ~]# ssh-copy-id -i .ssh/id_rsa.pub  root@192.168.100.30    
                <!--复制公钥到远端192.168.100.30-->
            *ansible配置
                Inventory是Ansible管理主机的配置文件，相当于系统的hosts文件的功能，默认存放在/etc/ansible/hosts;
                ansible -i /etc/ansible/hosts web -m ping           #使用选项-i或-inventory-file来指定Inventory
                ansible web -m ping                                 #使用默认的Inventory文件（/etc/ansible/hosts），可以不用指定
            *https://www.zhihu.com/search?type=content&q=ansible【#ansible相关资料】
